#pragma once

// User_Char
enum class USER_STATE
{
	USER_UP = 0,
	USER_IDLE,
	USER_DOWN,
	USER_HIT,
	USER_RESET
};

// User_Bullet
enum class USER_BULLET_STATE
{
	BULLET_OFF = -3,	
	BULLET_DEL,
	BULLET_HIT,
	BULLET_UP,
	BULLET_MIDDLE = 3,
	BULLET_DOWN	= 7
};

// User Up Bullet State
enum class USER_UP_BULLET_STATE
{
	UP_OFF = -1,
	UP_START,
	UP_INOCEAN,
	UP_OUTOCEAN
};

// User Down Bullet State
enum class USER_DOWN_BULLET_STATE
{
	DOWN_OFF = -1,
	DOWN_LEFT,
	DOWN_RIGHT
};

// SeaMon01_Char
enum class SEA_MONSTER01_STATE
{
	SEA_MONSTER01_OFF = -2,
	SEA_MONSTER01_DEL,
	SEA_MONSTER01_HIT,
	SEA_MONSTER01_UP,
	SEA_MONSTER01_IDLE,
	SEA_MONSTER01_DOWN
};

// SeaMon01 Bullet State
enum class SEAMON01_BULLET_STATE
{
	SEAMON01_BULLET_OFF = -3,
	SEAMON01_BULLET_DEL,
	SEAMON01_BULLET_HIT,
	SEAMON01_BULLET_UP,
	SEAMON01_BULLET_MID  = 3
};

// AirMon01_Char
enum class AIR_MONSTER01_STATE
{
	AIR_MONSTER01_OFF = -3,
	AIR_MONSTER01_DEL,
	AIR_MONSTER01_HIT,
	AIR_MONSTER01_DOWN = 6,
	AIR_MONSTER01_LEFT,
	AIR_MONSTER01_LATTACK,
	AIR_MONSTER01_LRELOAD,
	AIR_MONSTER01_RIGHT,
	AIR_MONSTER01_RATTACK,
	AIR_MONSTER01_RRELOAD
};

// AirMon01 Bullet State
enum class AIRMON01_BULLET_STATE
{
	AIRMON01_BULLET_OFF = -3,
	AIRMON01_BULLET_DEL,
	AIRMON01_BULLET_HIT,
	AIRMON01_BULLET_LEFT,
	AIRMON01_BULLET_RIGHT = 3
};

// Wave State
enum class WAVE_STATE
{
	WAVE_ON,
	WAVE_OFF
};
